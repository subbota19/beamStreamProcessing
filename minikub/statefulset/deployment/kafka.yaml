apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    service: kafka
  name: kafka
spec:
  serviceName: kafka
  replicas: 3
  selector:
    matchLabels:
      service: kafka
  template:
    metadata:
      labels:
        service: kafka
    spec:
      securityContext:
        fsGroup: 1000
      enableServiceLinks: false
      containers:
      - name: kafka
        imagePullPolicy: IfNotPresent
        image: confluentinc/cp-kafka:7.0.1
        ports:
          - containerPort: 9092
            name: internal
          - containerPort: 9093
            name: external
        command:
          - "/bin/sh"
          - "-c"
        args:
          - "export KAFKA_BROKER_ID=${POD_NAME##*-} KAFKA_ADVERTISED_LISTENERS=INTERNAL://${POD_NAME}.kafka.default.svc.cluster.local:9092,EXTERNAL://${MINIKUBE_IP}:3000${POD_NAME##*-} && exec /etc/confluent/docker/run"
        env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: MINIKUBE_IP
            value: "192.168.49.2"
          - name: KAFKA_ADVERTISED_LISTENERS
            value: ""
          - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
            value: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
          - name: KAFKA_INTER_BROKER_LISTENER_NAME
            value: "INTERNAL"
          - name: KAFKA_LISTENERS
            value: "INTERNAL://:9092,EXTERNAL://:9093"
          - name: KAFKA_NUM_PARTITIONS
            value: "10"
          - name: KAFKA_MIN_INSYNC_REPLICAS
            value: "2"
          - name: KAFKA_DEFAULT_REPLICATION_FACTOR
            value: "3"
          - name: KAFKA_ZOOKEEPER_CONNECT
            value: "zookeeper:2181"
        resources: {}
        volumeMounts:
          - mountPath: /var/lib/kafka/
            name: kafka-data
      hostname: kafka
      restartPolicy: Always
  volumeClaimTemplates:
    - metadata:
        name: kafka-data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi